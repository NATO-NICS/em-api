#
# Copyright (c) 2008-2021, Massachusetts Institute of Technology (MIT)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

em.api.rabbitmq.exchange.name=<name>
em.api.rabbitmq.hostname=<hostname>
em.api.rabbitmq.bindingkeys=<key>

em.api.user.alert.email=<email>
em.api.new.incident.emails=<email>
em.api.new.registered.users.emails=<email>

em.api.newuser.enabled.subject=<subject>
em.api.newuser.enabled.email=<email>
em.api.newuser.enabled.template=<template>

em.api.rabbitmq.userpwd=guest
em.api.rabbitmq.msgver=1.2.3
em.api.db.get.maxrows=500
em.api.cache.user.refreshminutes=60
em.api.service.incident.foreverid=800
em.api.resource.chat.stalemsg.factor.mins=15
em.api.resource.chat.stalemsg.factor.string=*STALE> 
em.api.resource.incident.getall.accessibleOnly=false

em.api.rabbitmq.username=guest
em.api.rabbitmq.userpwd=guest
em.api.rabbitmq.msgver=1.2.3
em.api.db.get.maxrows=500
em.api.cache.user.refreshminutes=60
em.api.service.incident.foreverid=800
em.api.resource.chat.stalemsg.factor.mins=15
em.api.resource.chat.stalemsg.factor.string=*STALE> 
em.api.resource.incident.getall.accessibleOnly=false

# File Upload Properties
em.api.service.file.upload.path=<path>
em.api.service.file.upload.url=<url>
em.api.service.geotiff.upload.path=<path>

# KML File Properties
em.api.service.kml.upload.path=<path>
em.api.service.kmz.upload.path=<path>
em.api.service.gpx.upload.path=<path>


# SR Report Properties
#em.api.resource.report.sr.storagepath=<path>
#em.api.resource.report.sr.url=<path>
#em.api.resource.report.sr.path=<path>

# File Upload Properties
em.api.resource.report.sr.storagepath=<path>
em.api.resource.report.sr.url=<url>
em.api.resource.report.sr.path=<path>

# damage report paths
em.api.resource.report.dmgrpt.storagepath=<path>
em.api.resource.report.dmgrpt.url=<url>
em.api.resource.report.dmgrpt.path=<path>

# UXO properties
em.api.resource.report.uxo.storagepath=<path>
em.api.resource.report.uxo.url=<url>
em.api.resource.report.uxo.path=<path>

em.api.service.image.feature.upload.path=<path>

em.api.service.image.layer.mapserver.url=<url>
em.api.service.image.layer.mapserver.username=<admin>
em.api.service.image.layer.mapserver.password=<password>
em.api.service.image.layer.mapserver.workspace=<workspace>
em.api.service.image.layer.mapserver.store=<store>
em.api.service.image.layer.datasource.url=<url>
em.api.service.geotiff.layer.datasource.url=<url>

em.api.resource.report.eod.storagepath=<path>
em.api.resource.report.eod.url=<path>
em.api.resource.report.eod.path=<url>

# Export Data Layer Properties
em.api.service.export.kmlExportURL=<url>
em.api.service.export.mapserverURL=<url>
em.api.service.export.mapserverUsername=<username>
em.api.service.export.mapserverPassword=<password>
em.api.service.export.collabroomStore=<store>
em.api.service.export.workspaceName=<name>
em.api.service.export.kmlTemplatePath=<path>
em.api.service.export.kmlTemplatePath=<path>
em.api.service.export.webserverURL=<url>
em.api.service.export.public.mapserverURL=<url>

# Import Data Layer Properties
em.api.service.import.shapefileWorkspace=<workspace>
em.api.service.import.shapefileStore=<store>

# MDT Properties
#
# Threshold that an MDT track can be in the future by
#
# Default: 1*60*1000
em.api.service.mdt.timeThreshold=90000


# MDT Properties
em.api.service.mdt.topic=<topic>
em.api.service.mdt.nicsSchemaLocationURI=<schema>
em.api.service.mdt.wfsSchemaURI=<uri>
em.api.service.mdt.wfsServiceURI=<uri>
em.api.service.mdt.typeName=<name>
em.api.service.mdt.srsName=<srs>

ssoToolsPropertyPath=<path>

# Topic to send email to (where the email-consumer is listening)
# Default: iweb.nics.email.alert
em.api.alert.topic=iweb.nics.email.alert


# List of system administrator emails. Messages sent here are intended for
# administrators of the actual servers, not necessarily of the NICS instance itself.
# Messages are sent here when an action needs taken that can't be performed in NICS.
em.api.sysadmin.alert.emails=<addresses>

# Pattern used to validate a NICS user password. Note that if it's less restrictive
# than your Identity provider's, registration will still fail since it will fail to
# register with the Identity provider.
#
# Default: ((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!_-]).{8,20})
em.api.password.pattern=((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!_-]).{8\,20})

# User readable password requirements explanation that matches the userPasswordPattern above
# Default: Your password must be a minimum 8 characters long and a maximum of 20 with at least one digit\, one upper case letter\, one lower case letter and one special symbol: @#$%-_!
em.api.password.requirements=Your password must be a minimum 8 characters long and a maximum of 20 with at least one digit\, one upper case letter\, one lower case letter and one special symbol: @#$%-_!

#
# The base topic for broadcast alerts. The API will append the userid
# for sending an alert to a specific user. This basetopic + userid will be
# the topic clients will be listening on.
#
em.api.broadcastalerts.basetopic=iweb.NICS.broadcastalerts.user.

# Name of the root folder where archived incidents are placed
em.api.service.incident.archived.folder.name=Archived

# Tracking layer icons
em.api.service.icon.upload.path=<path>

# Symbology Icon Path (formerly in iweb-modules)
#   Default: /opt/nics/upload/symbology
em.api.service.symbology.path=/opt/nics/upload/symbology

# Symbology host for use with exporting symbology. Put the host here that geoserver puts in front of icon paths when
# you export KML. It's usually host.../geoserver/styles/{icon} or host.../upload/symbology/{icon}
em.api.service.symbology.hosts=https://instance-machine.host.tld

# Symbology subdirectory match String used to replace all contents preceding and including this substring
em.api.service.symbology.path.match=upload/symbology/

#Upload Documents
em.api.service.org.document.upload.path=/opt/nics/upload/documents/org
em.api.service.incident.document.upload.path=/opt/nics/upload/documents/incident
em.api.service.collabroom.document.upload.path=/opt/nics/upload/documents/collabroom

# Language Translations path
em.api.service.translation.path=/opt/nics/upload/translations/
